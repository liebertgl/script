local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Repl Hub - Rivals",
    SubTitle = "By Liebert",
    TabWidth = 160,
    Size = UDim2.fromOffset(400, 300),
    Acrylic = false,
    Theme = "Darker",
    MinimizeKey = Enum.KeyCode.F6
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "home" })}

Window:SelectTab(1)

local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer 
local camera = workspace.CurrentCamera 
local mouse = localPlayer:GetMouse() 
local wtvp = camera.WorldToViewportPoint
local Terrain = workspace.Terrain
local Lighting = game:GetService("Lighting")
_G.silent = false
_G.esp = false

local function getClosestPlayerHead()
    local target
    local distance = math.huge 
    for i, v in ipairs(Players.GetPlayers(Players)) do
         if v == localPlayer or not v.Character then continue end 
         local character = v.Character 
         if character.FindFirstChild(character, "Head") then
            local head = character.Head 
            local headPos, onScreen = wtvp(camera, head.Position)
            
            if onScreen then 
                local mouseDist = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(headPos.X, headPos.Y)).Magnitude
                if mouseDist < distance then 
                    distance = mouseDist 
                    target = head
                end 
            end 
        end 
    end
    return target 
end 

function silent()
    if _G.silent then
        local old; old = hookmetamethod(game, "__namecall", function(...)
    local method = getnamecallmethod()
    local args = {...}
    local callingScript = getcallingscript()
    if (method == "Raycast") and (tostring(callingScript) == "Equipment" or tostring(callingScript) == "FighterController" or tostring(callingScript) == "PlayerDataController" or tostring(callingScript) == "ControlsController") then 
        args[2] = camera.CFrame.Position
        args[3] = (getClosestPlayerHead().Position - args[2]).Unit * 1000
    end
    return old(unpack(args))
end)
    end
end

function esp()
    local RunService = game:GetService("RunService")

    local function createHighlight(character)
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart and not humanoidRootPart:FindFirstChild("Highlight") then
            local highlight = Instance.new("Highlight")
            highlight.Adornee = character
            highlight.Parent = humanoidRootPart
            highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
            highlight.FillTransparency = 1
            highlight.OutlineColor = Color3.new(1, 1, 1)
        end
    end

    local function onPlayerAdded(player)
        player.CharacterAdded:Connect(function(character)
            createHighlight(character)
        end)
    end

    local function onPlayerRemoving(player)
        if player.Character then
            local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
            if humanoidRootPart then
                local highlight = humanoidRootPart:FindFirstChild("Highlight")
                if highlight then
                    highlight:Destroy()
                end
            end
        end
    end

    for _, player in pairs(Players:GetPlayers()) do
        if player.Character then
            createHighlight(player.Character)
        end
        onPlayerAdded(player)
    end

    Players.PlayerAdded:Connect(onPlayerAdded)
    Players.PlayerRemoving:Connect(onPlayerRemoving)

    RunService.Heartbeat:Connect(function()
        for _, player in pairs(Players:GetPlayers()) do
            if player.Character and not player.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild("Highlight") then
                createHighlight(player.Character)
            end
        end
    end)
end

local silent = Tabs.Main:AddToggle("Silent", {Title = "Silent Aim", Default = false, Callback = function(v) _G.silent = v
        silent()
        end
})
Tabs.Main:AddButton({
        Title = "Anti Lag",
        Description = "Anti Lag",
        Callback = function()
        if Terrain then
    Terrain.WaterWaveSize = 0
    Terrain.WaterWaveSpeed = 0
    Terrain.WaterReflectance = 0
    Terrain.WaterTransparency = 0
end

local Lighting = game:GetService("Lighting")
Lighting.GlobalShadows = false
Lighting.FogEnd = 9e9
Lighting.Brightness = 0

for _, child in pairs(workspace:GetDescendants()) do
    if child:IsA("BasePart") and child.Name ~= "Terrain" then
        child.Material = Enum.Material.Plastic
        child.Reflectance = 0
    elseif child:IsA("Decal") or child:IsA("Texture") then
        child:Destroy()
    elseif child:IsA("ParticleEmitter") or child:IsA("Fire") or child:IsA("Smoke") then
        child.Enabled = false
    elseif child:IsA("Explosion") then
        child.Visible = false
    end
end

for _, light in ipairs(Lighting:GetChildren()) do
    if light:IsA("Light") then
        light.Enabled = false
    end
end

local ToDisable = {
    Textures = true,
    VisualEffects = true,
    Parts = true,
    Particles = true,
    Sky = true
}

local ToEnable = {
    FullBright = false
}

local Stuff = {}

for _, v in pairs(game:GetDescendants()) do
    if ToDisable.Parts and (v:IsA("Part") or v:IsA("Union") or v:IsA("BasePart")) then
        v.Material = Enum.Material.SmoothPlastic
        table.insert(Stuff, 1, v)
    end
    
    if ToDisable.Particles and (v:IsA("ParticleEmitter") or v:IsA("Smoke") or v:IsA("Explosion") or v:IsA("Sparkles") or v:IsA("Fire")) then
        v.Enabled = false
        table.insert(Stuff, 1, v)
    end
    
    if ToDisable.VisualEffects and (v:IsA("BloomEffect") or v:IsA("BlurEffect") or v:IsA("DepthOfFieldEffect") or v:IsA("SunRaysEffect")) then
        v.Enabled = false
        table.insert(Stuff, 1, v)
    end
    
    if ToDisable.Textures and (v:IsA("Decal") or v:IsA("Texture")) then
        v.Texture = ""
        table.insert(Stuff, 1, v)
    end
    
    if ToDisable.Sky and v:IsA("Sky") then
        v.Parent = nil
        table.insert(Stuff, 1, v)
    end
end

for key, value in pairs(ToDisable) do
    print(key..": "..tostring(value))
end

if ToEnable.FullBright then
    Lighting.FogColor = Color3.fromRGB(255, 255, 255)
    Lighting.FogEnd = math.huge
    Lighting.FogStart = math.huge
    Lighting.Ambient = Color3.fromRGB(255, 255, 255)
    Lighting.Brightness = 5
    Lighting.ColorShift_Bottom = Color3.fromRGB(255, 255, 255)
    Lighting.ColorShift_Top = Color3.fromRGB(255, 255, 255)
    Lighting.OutdoorAmbient = Color3.fromRGB(255, 255, 255)
    Lighting.Outlines = true
end
    end
})

esp()

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "Toggle"
ScreenGui.Parent = game.CoreGui
ScreenGui.ResetOnSpawn = false
ScreenGui.DisplayOrder = 9999999

local Toggle = Instance.new("TextButton")
Toggle.Name = "Toggle"
Toggle.Parent = ScreenGui
Toggle.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Toggle.Position = UDim2.new(0, 0, 0.4547, 0)  -- Simplified UDim2 value
Toggle.Size = UDim2.new(0, 90, 0, 38)
Toggle.Font = Enum.Font.FredokaOne
Toggle.Text = "Toggle"
Toggle.TextColor3 = Color3.fromRGB(248, 248, 248)
Toggle.TextSize = 28
Toggle.Draggable = true

local Corner = Instance.new("UICorner")
Corner.Parent = Toggle

Toggle.MouseButton1Click:Connect(function()
    game:GetService("VirtualInputManager"):SendKeyEvent(true, "F6", false, game)
end)
